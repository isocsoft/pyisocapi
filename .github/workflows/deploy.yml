name: publish


on:
  push:
    paths:
      - "tests/*.py"
      - "src/pyisocapi/*.py"
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

permissions:
  contents: read

jobs:
  ruff-check:
    name: Run ruff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[test]

      - name: Run Ruff format
        run: ruff format .

      - name: Run Ruff check
        run: ruff check --output-format=github --fix .
    
  test:
    runs-on: ubuntu-latest
    needs: ruff-check
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13-dev"]
    
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: python -m pip install -e .[test]

      - name: Test
        run: python -m unittest

  check-version-bump:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [ruff-check, test]
    
    steps:
      - uses: actions/checkout@v4

      - name: Load PyPI version
        uses: maybe-hello-world/pyproject-check-version@v4
        id: version_check
      
      - name: check output
        run: |
          if [[ "${{ steps.version_check.outputs.local_version_is_higher }}" == "false" ]]; then
            local=${{ steps.version_check.outputs.local_version }}
            pypi=${{ steps.version_check.outputs.public_version }}
            echo "ERROR: local version($local) <= PyPI($pypi), bump it to publish package"
            exit 1
          fi            

  publish:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [ruff-check, test, check-version-bump]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build Package
        run: python -m build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
    
